/**
 * Mixin to provide the pixel fallback rem font/layout values.
 *
 * IE8 doesn't support rem units, so the best approach is to provide a pixel
 * fallback ahead of each rem value. This mixin by Karl Merkli does the
 * calculations (NB: assumes 16px base font size) and outputs the properties.
 * From http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
 */
@function strip-unit($num) {
	@return $num / ($num * 0 + 1);
}

@mixin rem-fallback($property, $values...) {
	$max: length($values);
	$pxValues: '';
	$remValues: '';

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$pxValues: #{$pxValues + $value*16}px;
		
		@if $i < $max {
			$pxValues: #{$pxValues + " "};
		}
	} 

	@for $i from 1 through $max {
		$value: strip-unit(nth($values, $i));
		$remValues: #{$remValues + $value}rem;

		@if $i < $max {
			$remValues: #{$remValues + " "};
		}
	} 
  
	#{$property}: $pxValues; // IE8 fallback
	#{$property}: $remValues; 
}